package lesson2;

//Основной класс для второго доманшего задания
public class Main {

    //Главный метод класса Main
    public static void main(String[]args) {
        /*Задание 1: Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ]
        С помощью цикла и условия заменить 0 на 1, 1 на 0
        Объявление и инициализация массива для первого задания**/
        int[] firstArray = new int[] {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
        //Цикл for для изменения 1 на 0 а 0 на 1 массива
        for (int i = 0; i < firstArray.length; i++) {
            if (firstArray[i] == 1) {
                firstArray[i] = 0;
            } else
            firstArray[i] = 1;
            System.out.print(firstArray[i] + " ");
        }
        //Разделитель между заданиями
        System.out.print("\n--------------------\n");

        /*Задание 2: Задать пустой целочисленный массив размером 8. С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;
        Объявление и инициализация массива для второго задания**/
        int[] secondArray = new int[8];
        //Цикл for, который содержит в себе 2 переменных: i (индекс) и j (значение). Индекс увеличивается до значения 7, а j до 21.
        for (int i = 0, j = 0; i < secondArray.length; i++, j+=3) {
            secondArray[i]=j;
            System.out.print(secondArray[i] + " ");
        }
        //Разделитель между заданиями
        System.out.print("\n--------------------\n");

        /*Задание 3: Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом, и числа меньшие 6 умножить на 2;
        Объявление и инициализация массива для третьего задания**/
        int[] thirdArray = new int[] {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        //Цикл for, проходящий по всему массиву
        for (int i = 0; i < thirdArray.length; i++) {
            //Вывод нового массива, в котором числа меньше 6 умножились на 2, проверка с помощью тернарного операторач
            System.out.print(thirdArray[i] < 6 ? thirdArray[i] * 2 + " " : thirdArray[i] + " ");
        }
        //Разделитель между заданиями
        System.out.print("\n--------------------\n");

        /*Задание 4: Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
        и с помощью цикла(-ов) заполнить его диагональные элементы единицами
        Объявление и инициализация массива для четвертого задания**/
        int[][] fourthArray = new int[5][5];
        //Цикл for, отвечающий за "строку" двумерного массива
        for (int i = 0; i < fourthArray.length; i++) {
            /*Цикл for, отвечающий за "столбец" двумерного массива
            j - индекс текущего "столбца" двумерного массива,
            x - вспомогательная переменная для построения диаганали справа налево**/
            for (int j = 0, x = fourthArray[i].length - 1; j < fourthArray[i].length; j++, x--) {
                if (i == j || i == x) {
                    fourthArray[i][j] = 1;
                }
                System.out.print(" " + fourthArray[i][j] + " ");
            }
            System.out.println();
        }
        //Разделитель между заданиями
        System.out.print("--------------------\n");

        /*Задание 5: Задать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета);
        Объявление и инициализация массива для пятого задания**/
        int[] fifthArray = new int[] {9, -12, 84, 7, 12, 0, 5, 99, 2};
        int maxNumber = 0;
        int minNumber = 0;
        //Цикл for, проходящий по всему массиву
        for (int i = 0; i < fifthArray.length; i++) {
            //Если предыдущий максимальный элемент меньше чем текущее число в массиве, то перезаписать значение
            if (maxNumber < fifthArray[i]) {
                maxNumber = fifthArray[i];
            }
            //Если предыдущий минимальный элемент больше чем текущее число в массиве, то перезаписать значение
            if (minNumber > fifthArray[i]) {
                minNumber = fifthArray[i];
            }
        }
        System.out.print("Самое большое число в массиве: " + maxNumber + " ,а самое маленькое: " + minNumber);
        //Разделитель между заданиями
        System.out.print("\n--------------------\n");

        //Массив для 6 задания
        int[] arrayLaR = new int[] {1,1,1,3};
        //Вызов метода и передача ему массива, а также проверка возвращаемого результата
        if (isLeftAndRight(arrayLaR)){
            System.out.println("В массиве сумма левой и правой части равны");
        } else System.out.println("В массиве сумма левой и правой части не равны");
    }

    /*Задание: Написать метод, в который передается не пустой одномерный целочисленный массив,
    метод должен вернуть true, если в массиве есть место, в котором сумма левой и правой части массива равны.
    Примеры: checkBalance([2, 2, 2, 1, 2, 2, || 10, 1]) → true, checkBalance([1, 1, 1, || 2, 1]) → true, граница показана символами ||, эти символы в массив не входят. **/
    public static boolean isLeftAndRight (int[] sixthArray) {
        int leftSumm = 0;
        int rightSumm = 0;
        //Цикл сложения значений индексов начиная с нулевого (слева)
        for (int i = 0; i < sixthArray.length; i++){
           leftSumm += sixthArray[i];
           // Цикл сложения оставшейся части массива (правой)
           for (int j = i+1; j < sixthArray.length; j++ ) {
               rightSumm += sixthArray[j];
               if (leftSumm == rightSumm) return true;
           }
        }
        return false;
    }
}
